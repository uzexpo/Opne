const WebSocket = require('ws');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Open Interpreter —Å–µ—Ä–≤–µ—Ä—É...');

const ws = new WebSocket('ws://localhost:8765');

ws.on('open', function open() {
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É –Ω–∞ –ø–æ—Ä—Ç—É 8765!');
  
  // –û—Ç–ø—Ä–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  const testMessage = {
    message: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞."
  };
  
  console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', testMessage.message);
  ws.send(JSON.stringify(testMessage));
});

ws.on('message', function message(data) {
  try {
    const response = JSON.parse(data.toString());
    console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log('   –¢–∏–ø:', response.type);
    console.log('   –°–æ–æ–±—â–µ–Ω–∏–µ:', response.message);
    
    if (response.type === 'response') {
      console.log('üéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã!');
      ws.close();
    }
  } catch (e) {
    console.log('üì• –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', data.toString());
  }
});

ws.on('error', function error(err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message);
});

ws.on('close', function close() {
  console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
  process.exit(0);
});

// –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
setTimeout(() => {
  console.log('‚è∞ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É');
  ws.close();
}, 30000);

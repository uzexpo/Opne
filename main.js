require('dotenv').config();
const { app, BrowserWindow, ipcMain, dialog } = require('electron');
const path = require('path');
const { spawn } = require('child_process');
const fs = require('fs');

// API Keys access
const openaiKey = process.env.OPENAI_API_KEY;
const claudeKey = process.env.CLAUDE_API_KEY;
const geminiKey = process.env.GEMINI_API_KEY;
const deepseekKey = process.env.DEEPSEEK_API_KEY;

let mainWindow;
let pythonServer = null;

function createWindow() {
  // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
  mainWindow = new BrowserWindow({
    width: 1200,
    height: 800,
    minWidth: 800,
    minHeight: 600,
    alwaysOnTop: false,
    frame: true,
    transparent: false,
    resizable: true,
    title: 'Open Interpreter - AI Agent',
    icon: path.join(__dirname, 'assets', 'icon.svg'),
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
      enableRemoteModule: true,
      webSecurity: false
    },
    show: false // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å—Ä–∞–∑—É
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º HTML —Ñ–∞–π–ª
  mainWindow.loadFile('index.html');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤–æ
  mainWindow.once('ready-to-show', () => {
    mainWindow.show();
    console.log('üöÄ Open Interpreter Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!');
  });

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º DevTools –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (process.env.NODE_ENV === 'development') {
    mainWindow.webContents.openDevTools();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
  mainWindow.on('closed', () => {
    mainWindow = null;
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if (pythonServer) {
      pythonServer.kill();
      console.log('üîö Python —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Python —Å–µ—Ä–≤–µ—Ä–∞
function startPythonServer() {
  return new Promise((resolve, reject) => {
    console.log('üîß –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–µ—Ä–∞...');
    
    // –ü—É—Ç—å –∫ Python —Å–µ—Ä–≤–µ—Ä—É
    const serverPath = path.join(__dirname, 'server.py');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(serverPath)) {
      reject(new Error('–§–∞–π–ª server.py –Ω–µ –Ω–∞–π–¥–µ–Ω!'));
      return;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ Python
    const isWindows = process.platform === 'win32';
    let pythonPath;
    
    if (isWindows) {
      // –ü—É—Ç—å –∫ Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –Ω–∞ Windows
      const venvPath = path.join(__dirname, '..', '.venv', 'Scripts', 'python.exe');
      pythonPath = fs.existsSync(venvPath) ? venvPath : 'python';
    } else {
      // –î–ª—è Linux/Mac
      const venvPath = path.join(__dirname, '..', '.venv', 'bin', 'python');
      pythonPath = fs.existsSync(venvPath) ? venvPath : 'python3';
    }

    console.log('üêç –ò—Å–ø–æ–ª—å–∑—É–µ–º Python:', pythonPath);

    // –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–µ—Ä–≤–µ—Ä
    pythonServer = spawn(pythonPath, [serverPath], {
      stdio: ['pipe', 'pipe', 'pipe'],
      shell: true
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ —Å–µ—Ä–≤–µ—Ä–∞
    pythonServer.stdout.on('data', (data) => {
      const output = data.toString();
      console.log('üì° –°–µ—Ä–≤–µ—Ä:', output);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
      if (mainWindow) {
        mainWindow.webContents.send('server-status', {
          type: 'output',
          message: output
        });
      }
    });

    pythonServer.stderr.on('data', (data) => {
      const error = data.toString();
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
      
      if (mainWindow) {
        mainWindow.webContents.send('server-status', {
          type: 'error',
          message: error
        });
      }
    });

    pythonServer.on('close', (code) => {
      console.log(`üîö Python —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
      if (mainWindow) {
        mainWindow.webContents.send('server-status', {
          type: 'closed',
          code: code
        });
      }
    });

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(() => {
      console.log('‚úÖ Python —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
      resolve();
    }, 2000);
  });
}

// IPC –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
ipcMain.handle('start-server', async () => {
  try {
    await startPythonServer();
    return { success: true, message: '–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!' };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    return { success: false, message: error.message };
  }
});

ipcMain.handle('stop-server', () => {
  if (pythonServer) {
    pythonServer.kill();
    pythonServer = null;
    return { success: true, message: '–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!' };
  }
  return { success: false, message: '–°–µ—Ä–≤–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω!' };
});

ipcMain.handle('get-server-status', () => {
  return {
    isRunning: pythonServer !== null,
    pid: pythonServer ? pythonServer.pid : null
  };
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
ipcMain.handle('select-file', async () => {
  const result = await dialog.showOpenDialog(mainWindow, {
    properties: ['openFile'],
    filters: [
      { name: '–í—Å–µ —Ñ–∞–π–ª—ã', extensions: ['*'] },
      { name: '–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã', extensions: ['txt', 'md', 'py', 'js', 'html', 'css'] },
      { name: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', extensions: ['png', 'jpg', 'jpeg', 'gif', 'bmp'] }
    ]
  });
  
  if (!result.canceled) {
    return result.filePaths[0];
  }
  return null;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
ipcMain.handle('save-file', async (event, defaultPath) => {
  const result = await dialog.showSaveDialog(mainWindow, {
    defaultPath: defaultPath || 'output.txt',
    filters: [
      { name: '–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã', extensions: ['txt'] },
      { name: '–í—Å–µ —Ñ–∞–π–ª—ã', extensions: ['*'] }
    ]
  });
  
  if (!result.canceled) {
    return result.filePath;
  }
  return null;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
ipcMain.handle('system-command', async (event, command) => {
  return new Promise((resolve) => {
    const child = spawn(command, [], { shell: true });
    
    let output = '';
    let error = '';
    
    child.stdout.on('data', (data) => {
      output += data.toString();
    });
    
    child.stderr.on('data', (data) => {
      error += data.toString();
    });
    
    child.on('close', (code) => {
      resolve({
        success: code === 0,
        output: output,
        error: error,
        code: code
      });
    });
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.whenReady().then(async () => {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Open Interpreter...');
  
  // –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ
  createWindow();
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º Python —Å–µ—Ä–≤–µ—Ä
  try {
    await startPythonServer();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!');
  } catch (error) {
    console.error('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:', error.message);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –æ—à–∏–±–∫–æ–π
    dialog.showErrorBox('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', 
      '–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å Python —Å–µ—Ä–≤–µ—Ä.\n' +
      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –º–µ–Ω—é.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (macOS)
app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –æ–∫–æ–Ω
app.on('window-all-closed', () => {
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python —Å–µ—Ä–≤–µ—Ä
  if (pythonServer) {
    pythonServer.kill();
    console.log('üîö Python —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  }
  
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('uncaughtException', (error) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  dialog.showErrorBox('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞', 
    '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:\n' + error.message);
});

console.log('üîß main.js –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

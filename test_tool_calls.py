#!/usr/bin/env python3
import asyncio
import websockets
import json

async def test_tool_calls():
    uri = "ws://localhost:8765"
    try:
        async with websockets.connect(uri) as websocket:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É")
            
            # –¢–µ—Å—Ç 1: audio.play
            print("\nüéµ –¢–µ—Å—Ç 1: audio.play")
            message1 = {
                "type": "tool_call",
                "tool": "audio.play",
                "args": {
                    "source": "https://samplelib.com/lib/preview/mp3/sample-3s.mp3",
                    "volume": 85
                }
            }
            await websocket.send(json.dumps(message1))
            response1 = await websocket.recv()
            print(f"–û—Ç–≤–µ—Ç: {response1}")
            
            await asyncio.sleep(4)  # –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            
            # –¢–µ—Å—Ç 2: browser.playAudio
            print("\nüåê –¢–µ—Å—Ç 2: browser.playAudio")
            message2 = {
                "type": "tool_call",
                "tool": "browser.playAudio",
                "args": {
                    "page_url": "https://example.com",
                    "audio_url": "https://samplelib.com/lib/preview/mp3/sample-3s.mp3",
                    "duration": 6
                }
            }
            await websocket.send(json.dumps(message2))
            response2 = await websocket.recv()
            print(f"–û—Ç–≤–µ—Ç: {response2}")
            
            await asyncio.sleep(7)  # –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
            
            # –¢–µ—Å—Ç 3: audio.stop
            print("\nüõë –¢–µ—Å—Ç 3: audio.stop")
            message3 = {
                "type": "tool_call",
                "tool": "audio.stop",
                "args": {}
            }
            await websocket.send(json.dumps(message3))
            response3 = await websocket.recv()
            print(f"–û—Ç–≤–µ—Ç: {response3}")
            
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_tool_calls())

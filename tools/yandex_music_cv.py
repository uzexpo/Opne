#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéµ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞ CV –Ω–∞–≤—ã–∫–∏ –¥–ª—è Open Interpreter
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∞ —á–µ—Ä–µ–∑ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from enhanced_cv import enhanced_cv
import time
import webbrowser
import logging

logger = logging.getLogger(__name__)

class YandexMusicCV:
    """–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º"""
    
    def __init__(self):
        self.cv = enhanced_cv
        self.yandex_music_url = "https://music.yandex.ru"
        logger.info("üéµ YandexMusicCV –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def open_and_play_yandex_music(self, search_query: str = None) -> str:
        """
        –û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫—É –∏ –Ω–∞—á–∞—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        """
        try:
            logger.info(f"üéµ –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫—É: {search_query or '–ª—é–±–∞—è –º—É–∑—ã–∫–∞'}")
            
            # 1. –û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            if search_query:
                search_url = f"{self.yandex_music_url}/search?text={search_query.replace(' ', '%20')}"
                webbrowser.open(search_url)
            else:
                webbrowser.open(self.yandex_music_url)
            
            # 2. –ü–æ–¥–æ–∂–¥–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            time.sleep(4)
            
            # 3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å –∫–Ω–æ–ø–∫—É –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            play_attempts = [
                "–∫–Ω–æ–ø–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è",
                "play button", 
                "–∫–Ω–æ–ø–∫–∞ –ø–ª–µ–π",
                "‚ñ∂Ô∏è",
                "—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"
            ]
            
            for attempt in play_attempts:
                result = self.cv.find_and_click(attempt, click=True)
                if result['success']:
                    logger.info(f"‚úÖ –ù–∞—à–ª–∏ –∏ –∫–ª–∏–∫–Ω—É–ª–∏: {attempt}")
                    time.sleep(1)
                    return f"üéµ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ò–≥—Ä–∞–µ—Ç: {search_query or '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}"
                
                time.sleep(0.5)
            
            # 4. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ Play –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –ø–µ—Ä–≤–æ–º—É —Ç—Ä–µ–∫—É
            track_attempts = [
                "–ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫ –≤ —Å–ø–∏—Å–∫–µ",
                "–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏",
                "—Ç—Ä–µ–∫ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"
            ]
            
            for attempt in track_attempts:
                result = self.cv.find_and_click(attempt, click=True)
                if result['success']:
                    logger.info(f"‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Ç—Ä–µ–∫—É: {attempt}")
                    return f"üéµ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞: —Ç—Ä–µ–∫ –∑–∞–ø—É—â–µ–Ω! {search_query or ''}"
                
                time.sleep(0.5)
            
            # 5. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª
            import pyautogui
            pyautogui.press('space')
            
            return f"üéµ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –ü–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª."
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–æ–π: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞: {e}"
    
    def pause_yandex_music(self) -> str:
        """–ü–∞—É–∑–∞ –≤ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–µ"""
        try:
            # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ø–∞—É–∑—ã
            pause_result = self.cv.find_and_click("–∫–Ω–æ–ø–∫–∞ –ø–∞—É–∑—ã", click=True)
            if pause_result['success']:
                return "‚è∏Ô∏è –ú—É–∑—ã–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–∞—É–∑—É"
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –Ω–∞–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª
            import pyautogui
            pyautogui.press('space')
            return "‚è∏Ô∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–∞—É–∑—ã (–ø—Ä–æ–±–µ–ª)"
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—É–∑—ã: {e}"
    
    def next_track(self) -> str:
        """–°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫"""
        try:
            next_result = self.cv.find_and_click("—Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫", click=True)
            if next_result['success']:
                return "‚è≠Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫"
            
            # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å—Ç—Ä–µ–ª–∫—É –≤–ø—Ä–∞–≤–æ
            import pyautogui
            pyautogui.press('right')
            return "‚è≠Ô∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞"
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {e}"
    
    def analyze_yandex_music_screen(self) -> str:
        """–ê–Ω–∞–ª–∏–∑ —ç–∫—Ä–∞–Ω–∞ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏"""
        try:
            result = self.cv.smart_screenshot_analysis()
            if result['success']:
                return f"üìä –ê–Ω–∞–ª–∏–∑ —ç–∫—Ä–∞–Ω–∞ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏: –Ω–∞–π–¥–µ–Ω–æ {result['elements_count']} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
            else:
                return f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}"
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞: {e}"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
yandex_music_cv = YandexMusicCV()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Open Interpreter
def play_yandex_music_with_cv(query: str = None) -> str:
    """
    –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫—É —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º
    
    Args:
        query: –ß—Ç–æ –∏—Å–∫–∞—Ç—å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    Returns:
        –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    """
    return yandex_music_cv.open_and_play_yandex_music(query)

def pause_yandex_music_cv() -> str:
    """–ü–∞—É–∑–∞ –≤ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–µ —á–µ—Ä–µ–∑ CV"""
    return yandex_music_cv.pause_yandex_music()

def next_track_yandex_cv() -> str:
    """–°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫ –≤ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–µ —á–µ—Ä–µ–∑ CV"""
    return yandex_music_cv.next_track()

def analyze_yandex_music_cv() -> str:
    """–ê–Ω–∞–ª–∏–∑ —ç–∫—Ä–∞–Ω–∞ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏"""
    return yandex_music_cv.analyze_yandex_music_screen()

if __name__ == "__main__":
    # –¢–µ—Å—Ç –Ω–∞–≤—ã–∫–∞
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞ CV...")
    
    result = analyze_yandex_music_cv()
    print(f"–ê–Ω–∞–ª–∏–∑: {result}")

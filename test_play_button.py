#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üéµ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ö–ù–û–ü–ö–ò PLAY üéµ
–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∏ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Play –≤ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–µ
"""

import pyautogui
import time
import sys
import os

print("üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ Play...")

def simple_play_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ Play"""
    try:
        print("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç...")
        screenshot = pyautogui.screenshot()
        print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—É—á–µ–Ω: {screenshot.size}")
        
        print("üîç –ò—â–µ–º —Ç–µ–∫—Å—Ç 'Play' –Ω–∞ —ç–∫—Ä–∞–Ω–µ...")
        try:
            # –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ "Play" –Ω–∞ —ç–∫—Ä–∞–Ω–µ
            play_locations = list(pyautogui.locateAllOnScreen(
                screenshot, 
                confidence=0.7,
                grayscale=True
            ))
            
            if play_locations:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(play_locations)} –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ Play")
                for i, location in enumerate(play_locations):
                    print(f"  {i}: {pyautogui.center(location)}")
            else:
                print("‚ùå –ö–Ω–æ–ø–∫–∏ Play –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —á–µ—Ä–µ–∑ locateAllOnScreen")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")
        
        print("\nüîç –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã...")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 1: –ü–æ–∏—Å–∫ –ø–æ –ø–∏–∫—Å–µ–ª—é
        print("1Ô∏è‚É£ –ü–æ–∏—Å–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –∫–Ω–æ–ø–∫–∏ Play...")
        
        # –¢–∏–ø–∏—á–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ Play –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–Ω–∏–∂–Ω—è—è —á–∞—Å—Ç—å)
        play_candidates = [
            (960, 950),   # –¶–µ–Ω—Ç—Ä –Ω–∏–∑–∞ —ç–∫—Ä–∞–Ω–∞
            (100, 950),   # –õ–µ–≤—ã–π —É–≥–æ–ª –Ω–∏–∑–∞
            (300, 950),   # –õ–µ–≤–∞—è —á–∞—Å—Ç—å –Ω–∏–∑–∞
            (1820, 950),  # –ü—Ä–∞–≤—ã–π —É–≥–æ–ª –Ω–∏–∑–∞
        ]
        
        for x, y in play_candidates:
            if x < screenshot.size[0] and y < screenshot.size[1]:
                pixel_color = screenshot.getpixel((x, y))
                print(f"  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({x}, {y}): —Ü–≤–µ—Ç {pixel_color}")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 2: –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–±–ª–∞—Å—Ç–∏
        print("2Ô∏è‚É£ –ü–æ–∏—Å–∫ –≤ –Ω–∏–∂–Ω–µ–π —Ç—Ä–µ—Ç–∏ —ç–∫—Ä–∞–Ω–∞...")
        
        width, height = screenshot.size
        bottom_third_y = height * 2 // 3
        
        print(f"  –≠–∫—Ä–∞–Ω: {width}x{height}")
        print(f"  –ò—â–µ–º –≤ –æ–±–ª–∞—Å—Ç–∏ –æ—Ç y={bottom_third_y} –¥–æ y={height}")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 3: –ü—Ä—è–º–æ–π –∫–ª–∏–∫ –ø–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –∏–∑ –ª–æ–≥–∞
        print("3Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –ª–æ–≥–∞ Open Interpreter...")
        known_coordinates = [
            (318, 451),   # –ò–∑ –ª–æ–≥–∞: –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ Play
            (260, 480),
            (312, 683),
            (1776, 766)
        ]
        
        for i, (x, y) in enumerate(known_coordinates):
            if x < width and y < height:
                pixel = screenshot.getpixel((x, y))
                print(f"  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ {i+1}: ({x}, {y}) —Ü–≤–µ—Ç={pixel}")
                
                # –¢–ï–°–¢-–ö–õ–ò–ö (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–∫–∞, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞)
                print(f"    ‚úÖ –ì–æ—Ç–æ–≤ –∫ –∫–ª–∏–∫—É –ø–æ ({x}, {y})")
            else:
                print(f"  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ {i+1}: ({x}, {y}) - –≤–Ω–µ —ç–∫—Ä–∞–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

def smart_play_click():
    """–£–º–Ω—ã–π –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Play"""
    try:
        print("\nüéØ –ü–†–û–ë–£–ï–ú –†–ï–ê–õ–¨–ù–´–ô –ö–õ–ò–ö –ü–û –ö–ù–û–ü–ö–ï PLAY...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ Open Interpreter
        best_coordinates = [
            (318, 451),   # –ü–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            (260, 480),   # –í—Ç–æ—Ä–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        ]
        
        for i, (x, y) in enumerate(best_coordinates):
            print(f"üñ±Ô∏è –ü—Ä–æ–±—É–µ–º –∫–ª–∏–∫ {i+1}: ({x}, {y})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞
            screen_width, screen_height = pyautogui.size()
            if 0 <= x <= screen_width and 0 <= y <= screen_height:
                
                # –†–ï–ê–õ–¨–ù–´–ô –ö–õ–ò–ö!
                pyautogui.click(x, y)
                print(f"‚úÖ –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ ({x}, {y})")
                
                time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∫–ª–∏–∫–∞–º–∏
                
                return True
            else:
                print(f"‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({x}, {y}) –≤–Ω–µ —ç–∫—Ä–∞–Ω–∞ {screen_width}x{screen_height}")
        
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ Play...")
    
    # –§–∞–∑–∞ 1: –ê–Ω–∞–ª–∏–∑
    success = simple_play_test()
    
    if success:
        # –§–∞–∑–∞ 2: –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–µ–Ω)
        response = input("\n‚ùì –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Play? (y/n): ")
        if response.lower() == 'y':
            smart_play_click()
        else:
            print("üëç –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ –∫–ª–∏–∫–∞")
    
    print("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

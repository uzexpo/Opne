#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
"""

import asyncio
import websockets
import json
import sys

async def test_connection():
    uri = "ws://localhost:8765"
    
    try:
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...")
        async with websockets.connect(uri) as websocket:
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = {
                "message": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è."
            }
            
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {test_message}")
            await websocket.send(json.dumps(test_message))
            
            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞...")
            
            timeout_count = 0
            max_timeout = 30  # 30 —Å–µ–∫—É–Ω–¥
            
            while timeout_count < max_timeout:
                try:
                    response = await asyncio.wait_for(websocket.recv(), timeout=1.0)
                    data = json.loads(response)
                    print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {data}")
                    
                    if data.get('type') == 'response':
                        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                        return True
                        
                except asyncio.TimeoutError:
                    timeout_count += 1
                    print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... ({timeout_count}/{max_timeout})")
                    continue
                    
            print("‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    success = asyncio.run(test_connection())
    
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
        sys.exit(1)
